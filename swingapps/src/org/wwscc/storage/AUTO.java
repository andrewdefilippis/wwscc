package org.wwscc.storage;
import java.io.IOException;
import java.util.List;
import org.wwscc.storage.SQLDataInterface.ResultRow;

/*** AUTOGENERATED CODE, DO NOT MODIFY ***/

public class AUTO
{
	public static org.wwscc.storage.Event loadEvent(ResultRow rs) throws IOException
	{
		org.wwscc.storage.Event o = new org.wwscc.storage.Event();
		o.id = rs.getInt("id");
		o.ispro = rs.getBoolean("ispro");
		o.practice = rs.getBoolean("practice");
		o.courses = rs.getInt("courses");
		o.runs = rs.getInt("runs");
		o.countedruns = rs.getInt("countedruns");
		o.conepen = rs.getDouble("conepen");
		o.gatepen = rs.getDouble("gatepen");
		o.segments = rs.getString("segments");
		o.password = rs.getString("password");
		o.name = rs.getString("name");
		o.date = rs.getSADate("date");
		o.location = rs.getString("location");
		o.sponsor = rs.getString("sponsor");
		o.host = rs.getString("host");
		o.designer = rs.getString("designer");
		o.regopened = rs.getSADateTime("regopened");
		o.regclosed = rs.getSADateTime("regclosed");
		o.perlimit = rs.getInt("perlimit");
		o.totlimit = rs.getInt("totlimit");
		o.cost = rs.getInt("cost");
		o.paypal = rs.getString("paypal");
		o.snail = rs.getString("snail");
		o.notes = rs.getString("notes");
		return o;
	}
	
	public static String getEventVarStr()
	{
		return "ispro,practice,courses,runs,countedruns,conepen,gatepen,segments,password,name,date,location,sponsor,host,designer,regopened,regclosed,perlimit,totlimit,cost,paypal,snail,notes";
	}
	
	public static String getEventArgStr()
	{
		return "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?";
	}
	
	public static String getEventSetStr()
	{
		return "ispro=?,practice=?,courses=?,runs=?,countedruns=?,conepen=?,gatepen=?,segments=?,password=?,name=?,date=?,location=?,sponsor=?,host=?,designer=?,regopened=?,regclosed=?,perlimit=?,totlimit=?,cost=?,paypal=?,snail=?,notes=?";
	}
	
	public static void addEventValues(org.wwscc.storage.Event o, List<Object> l)
	{
		l.add(o.ispro);
		l.add(o.practice);
		l.add(o.courses);
		l.add(o.runs);
		l.add(o.countedruns);
		l.add(o.conepen);
		l.add(o.gatepen);
		l.add(o.segments);
		l.add(o.password);
		l.add(o.name);
		l.add(o.date);
		l.add(o.location);
		l.add(o.sponsor);
		l.add(o.host);
		l.add(o.designer);
		l.add(o.regopened);
		l.add(o.regclosed);
		l.add(o.perlimit);
		l.add(o.totlimit);
		l.add(o.cost);
		l.add(o.paypal);
		l.add(o.snail);
		l.add(o.notes);
	}
	
	public static org.wwscc.storage.Driver loadDriver(ResultRow rs) throws IOException
	{
		org.wwscc.storage.Driver o = new org.wwscc.storage.Driver();
		o.id = rs.getInt("id");
		o.firstname = rs.getString("firstname");
		o.lastname = rs.getString("lastname");
		o.alias = rs.getString("alias");
		o.email = rs.getString("email");
		o.address = rs.getString("address");
		o.city = rs.getString("city");
		o.state = rs.getString("state");
		o.zip = rs.getString("zip");
		o.phone = rs.getString("phone");
		o.brag = rs.getString("brag");
		o.sponsor = rs.getString("sponsor");
		return o;
	}
	
	public static String getDriverVarStr()
	{
		return "firstname,lastname,alias,email,address,city,state,zip,phone,brag,sponsor";
	}
	
	public static String getDriverArgStr()
	{
		return "?,?,?,?,?,?,?,?,?,?,?";
	}
	
	public static String getDriverSetStr()
	{
		return "firstname=?,lastname=?,alias=?,email=?,address=?,city=?,state=?,zip=?,phone=?,brag=?,sponsor=?";
	}
	
	public static void addDriverValues(org.wwscc.storage.Driver o, List<Object> l)
	{
		l.add(o.firstname);
		l.add(o.lastname);
		l.add(o.alias);
		l.add(o.email);
		l.add(o.address);
		l.add(o.city);
		l.add(o.state);
		l.add(o.zip);
		l.add(o.phone);
		l.add(o.brag);
		l.add(o.sponsor);
	}
	
	public static org.wwscc.storage.DriverField loadDriverField(ResultRow rs) throws IOException
	{
		org.wwscc.storage.DriverField o = new org.wwscc.storage.DriverField();
		o.id = rs.getInt("id");
		o.name = rs.getString("name");
		o.title = rs.getString("title");
		o.type = rs.getString("type");
		return o;
	}
	
	public static String getDriverFieldVarStr()
	{
		return "name,title,type";
	}
	
	public static String getDriverFieldArgStr()
	{
		return "?,?,?";
	}
	
	public static String getDriverFieldSetStr()
	{
		return "name=?,title=?,type=?";
	}
	
	public static void addDriverFieldValues(org.wwscc.storage.DriverField o, List<Object> l)
	{
		l.add(o.name);
		l.add(o.title);
		l.add(o.type);
	}
	
	public static org.wwscc.storage.Car loadCar(ResultRow rs) throws IOException
	{
		org.wwscc.storage.Car o = new org.wwscc.storage.Car();
		o.id = rs.getInt("id");
		o.driverid = rs.getInt("driverid");
		o.year = rs.getString("year");
		o.make = rs.getString("make");
		o.model = rs.getString("model");
		o.color = rs.getString("color");
		o.number = rs.getInt("number");
		o.classcode = rs.getString("classcode");
		o.indexcode = rs.getString("indexcode");
		o.tireindexed = rs.getBoolean("tireindexed");
		return o;
	}
	
	public static String getCarVarStr()
	{
		return "driverid,year,make,model,color,number,classcode,indexcode,tireindexed";
	}
	
	public static String getCarArgStr()
	{
		return "?,?,?,?,?,?,?,?,?";
	}
	
	public static String getCarSetStr()
	{
		return "driverid=?,year=?,make=?,model=?,color=?,number=?,classcode=?,indexcode=?,tireindexed=?";
	}
	
	public static void addCarValues(org.wwscc.storage.Car o, List<Object> l)
	{
		l.add(o.driverid);
		l.add(o.year);
		l.add(o.make);
		l.add(o.model);
		l.add(o.color);
		l.add(o.number);
		l.add(o.classcode);
		l.add(o.indexcode);
		l.add(o.tireindexed);
	}
	
	public static org.wwscc.storage.Run loadRun(ResultRow rs) throws IOException
	{
		org.wwscc.storage.Run o = new org.wwscc.storage.Run();
		o.id = rs.getInt("id");
		o.carid = rs.getInt("carid");
		o.eventid = rs.getInt("eventid");
		o.course = rs.getInt("course");
		o.run = rs.getInt("run");
		o.cones = rs.getInt("cones");
		o.gates = rs.getInt("gates");
		o.status = rs.getString("status");
		o.rorder = rs.getInt("rorder");
		o.norder = rs.getInt("norder");
		o.brorder = rs.getInt("brorder");
		o.bnorder = rs.getInt("bnorder");
		o.reaction = rs.getDouble("reaction");
		o.sixty = rs.getDouble("sixty");
		o.seg1 = rs.getDouble("seg1");
		o.seg2 = rs.getDouble("seg2");
		o.seg3 = rs.getDouble("seg3");
		o.seg4 = rs.getDouble("seg4");
		o.seg5 = rs.getDouble("seg5");
		o.raw = rs.getDouble("raw");
		o.net = rs.getDouble("net");
		return o;
	}
	
	public static String getRunVarStr()
	{
		return "carid,eventid,course,run,cones,gates,status,rorder,norder,brorder,bnorder,reaction,sixty,seg1,seg2,seg3,seg4,seg5,raw,net";
	}
	
	public static String getRunArgStr()
	{
		return "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?";
	}
	
	public static String getRunSetStr()
	{
		return "carid=?,eventid=?,course=?,run=?,cones=?,gates=?,status=?,rorder=?,norder=?,brorder=?,bnorder=?,reaction=?,sixty=?,seg1=?,seg2=?,seg3=?,seg4=?,seg5=?,raw=?,net=?";
	}
	
	public static void addRunValues(org.wwscc.storage.Run o, List<Object> l)
	{
		l.add(o.carid);
		l.add(o.eventid);
		l.add(o.course);
		l.add(o.run);
		l.add(o.cones);
		l.add(o.gates);
		l.add(o.status);
		l.add(o.rorder);
		l.add(o.norder);
		l.add(o.brorder);
		l.add(o.bnorder);
		l.add(o.reaction);
		l.add(o.sixty);
		l.add(o.seg1);
		l.add(o.seg2);
		l.add(o.seg3);
		l.add(o.seg4);
		l.add(o.seg5);
		l.add(o.raw);
		l.add(o.net);
	}
	
	public static org.wwscc.storage.Challenge loadChallenge(ResultRow rs) throws IOException
	{
		org.wwscc.storage.Challenge o = new org.wwscc.storage.Challenge();
		o.id = rs.getInt("id");
		o.eventid = rs.getInt("eventid");
		o.name = rs.getString("name");
		o.depth = rs.getInt("depth");
		return o;
	}
	
	public static String getChallengeVarStr()
	{
		return "eventid,name,depth";
	}
	
	public static String getChallengeArgStr()
	{
		return "?,?,?";
	}
	
	public static String getChallengeSetStr()
	{
		return "eventid=?,name=?,depth=?";
	}
	
	public static void addChallengeValues(org.wwscc.storage.Challenge o, List<Object> l)
	{
		l.add(o.eventid);
		l.add(o.name);
		l.add(o.depth);
	}
	
	public static org.wwscc.storage.ChallengeRun loadChallengeRun(ResultRow rs) throws IOException
	{
		org.wwscc.storage.ChallengeRun o = new org.wwscc.storage.ChallengeRun();
		o.id = rs.getInt("id");
		o.carid = rs.getInt("carid");
		o.eventid = rs.getInt("eventid");
		o.course = rs.getInt("course");
		o.run = rs.getInt("run");
		o.cones = rs.getInt("cones");
		o.gates = rs.getInt("gates");
		o.status = rs.getString("status");
		o.rorder = rs.getInt("rorder");
		o.norder = rs.getInt("norder");
		o.brorder = rs.getInt("brorder");
		o.bnorder = rs.getInt("bnorder");
		o.reaction = rs.getDouble("reaction");
		o.sixty = rs.getDouble("sixty");
		o.seg1 = rs.getDouble("seg1");
		o.seg2 = rs.getDouble("seg2");
		o.seg3 = rs.getDouble("seg3");
		o.seg4 = rs.getDouble("seg4");
		o.seg5 = rs.getDouble("seg5");
		o.raw = rs.getDouble("raw");
		o.net = rs.getDouble("net");
		return o;
	}
	
	public static String getChallengeRunVarStr()
	{
		return "carid,eventid,course,run,cones,gates,status,rorder,norder,brorder,bnorder,reaction,sixty,seg1,seg2,seg3,seg4,seg5,raw,net";
	}
	
	public static String getChallengeRunArgStr()
	{
		return "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?";
	}
	
	public static String getChallengeRunSetStr()
	{
		return "carid=?,eventid=?,course=?,run=?,cones=?,gates=?,status=?,rorder=?,norder=?,brorder=?,bnorder=?,reaction=?,sixty=?,seg1=?,seg2=?,seg3=?,seg4=?,seg5=?,raw=?,net=?";
	}
	
	public static void addChallengeRunValues(org.wwscc.storage.ChallengeRun o, List<Object> l)
	{
		l.add(o.carid);
		l.add(o.eventid);
		l.add(o.course);
		l.add(o.run);
		l.add(o.cones);
		l.add(o.gates);
		l.add(o.status);
		l.add(o.rorder);
		l.add(o.norder);
		l.add(o.brorder);
		l.add(o.bnorder);
		l.add(o.reaction);
		l.add(o.sixty);
		l.add(o.seg1);
		l.add(o.seg2);
		l.add(o.seg3);
		l.add(o.seg4);
		l.add(o.seg5);
		l.add(o.raw);
		l.add(o.net);
	}
	
	public static org.wwscc.storage.ClassData.Class loadClass(ResultRow rs) throws IOException
	{
		org.wwscc.storage.ClassData.Class o = new org.wwscc.storage.ClassData.Class();
		o.code = rs.getString("code");
		o.descrip = rs.getString("descrip");
		o.carindexed = rs.getBoolean("carindexed");
		o.classindex = rs.getString("classindex");
		o.classmultiplier = rs.getDouble("classmultiplier");
		o.eventtrophy = rs.getBoolean("eventtrophy");
		o.champtrophy = rs.getBoolean("champtrophy");
		o.numorder = rs.getInt("numorder");
		o.countedruns = rs.getInt("countedruns");
		o.usecarflag = rs.getBoolean("usecarflag");
		return o;
	}
	
	public static String getClassVarStr()
	{
		return "code,descrip,carindexed,classindex,classmultiplier,eventtrophy,champtrophy,numorder,countedruns,usecarflag";
	}
	
	public static String getClassArgStr()
	{
		return "?,?,?,?,?,?,?,?,?,?";
	}
	
	public static String getClassSetStr()
	{
		return "code=?,descrip=?,carindexed=?,classindex=?,classmultiplier=?,eventtrophy=?,champtrophy=?,numorder=?,countedruns=?,usecarflag=?";
	}
	
	public static void addClassValues(org.wwscc.storage.ClassData.Class o, List<Object> l)
	{
		l.add(o.code);
		l.add(o.descrip);
		l.add(o.carindexed);
		l.add(o.classindex);
		l.add(o.classmultiplier);
		l.add(o.eventtrophy);
		l.add(o.champtrophy);
		l.add(o.numorder);
		l.add(o.countedruns);
		l.add(o.usecarflag);
	}
	
	public static org.wwscc.storage.ClassData.Index loadIndex(ResultRow rs) throws IOException
	{
		org.wwscc.storage.ClassData.Index o = new org.wwscc.storage.ClassData.Index();
		o.code = rs.getString("code");
		o.descrip = rs.getString("descrip");
		o.value = rs.getDouble("value");
		return o;
	}
	
	public static String getIndexVarStr()
	{
		return "code,descrip,value";
	}
	
	public static String getIndexArgStr()
	{
		return "?,?,?";
	}
	
	public static String getIndexSetStr()
	{
		return "code=?,descrip=?,value=?";
	}
	
	public static void addIndexValues(org.wwscc.storage.ClassData.Index o, List<Object> l)
	{
		l.add(o.code);
		l.add(o.descrip);
		l.add(o.value);
	}
	
	public static org.wwscc.storage.EventResult loadEventResult(ResultRow rs) throws IOException
	{
		org.wwscc.storage.EventResult o = new org.wwscc.storage.EventResult();
		o.id = rs.getInt("id");
		o.eventid = rs.getInt("eventid");
		o.carid = rs.getInt("carid");
		o.classcode = rs.getString("classcode");
		o.position = rs.getInt("position");
		o.courses = rs.getInt("courses");
		o.sum = rs.getDouble("sum");
		o.diff = rs.getDouble("diff");
		o.diffpoints = rs.getDouble("diffpoints");
		o.pospoints = rs.getInt("pospoints");
		return o;
	}
	
	public static String getEventResultVarStr()
	{
		return "eventid,carid,classcode,position,courses,sum,diff,diffpoints,pospoints";
	}
	
	public static String getEventResultArgStr()
	{
		return "?,?,?,?,?,?,?,?,?";
	}
	
	public static String getEventResultSetStr()
	{
		return "eventid=?,carid=?,classcode=?,position=?,courses=?,sum=?,diff=?,diffpoints=?,pospoints=?";
	}
	
	public static void addEventResultValues(org.wwscc.storage.EventResult o, List<Object> l)
	{
		l.add(o.eventid);
		l.add(o.carid);
		l.add(o.classcode);
		l.add(o.position);
		l.add(o.courses);
		l.add(o.sum);
		l.add(o.diff);
		l.add(o.diffpoints);
		l.add(o.pospoints);
	}
	
	public static org.wwscc.storage.AnnouncerData loadAnnouncerData(ResultRow rs) throws IOException
	{
		org.wwscc.storage.AnnouncerData o = new org.wwscc.storage.AnnouncerData();
		o.id = rs.getInt("id");
		o.eventid = rs.getInt("eventid");
		o.carid = rs.getInt("carid");
		o.classcode = rs.getString("classcode");
		o.lastcourse = rs.getInt("lastcourse");
		o.rawdiff = rs.getDouble("rawdiff");
		o.netdiff = rs.getDouble("netdiff");
		o.oldsum = rs.getDouble("oldsum");
		o.potentialsum = rs.getDouble("potentialsum");
		o.olddiffpoints = rs.getDouble("olddiffpoints");
		o.potentialdiffpoints = rs.getDouble("potentialdiffpoints");
		o.oldpospoints = rs.getInt("oldpospoints");
		o.potentialpospoints = rs.getInt("potentialpospoints");
		o.updated = rs.getSADateTime("updated");
		return o;
	}
	
	public static String getAnnouncerDataVarStr()
	{
		return "eventid,carid,classcode,lastcourse,rawdiff,netdiff,oldsum,potentialsum,olddiffpoints,potentialdiffpoints,oldpospoints,potentialpospoints,updated";
	}
	
	public static String getAnnouncerDataArgStr()
	{
		return "?,?,?,?,?,?,?,?,?,?,?,?,?";
	}
	
	public static String getAnnouncerDataSetStr()
	{
		return "eventid=?,carid=?,classcode=?,lastcourse=?,rawdiff=?,netdiff=?,oldsum=?,potentialsum=?,olddiffpoints=?,potentialdiffpoints=?,oldpospoints=?,potentialpospoints=?,updated=?";
	}
	
	public static void addAnnouncerDataValues(org.wwscc.storage.AnnouncerData o, List<Object> l)
	{
		l.add(o.eventid);
		l.add(o.carid);
		l.add(o.classcode);
		l.add(o.lastcourse);
		l.add(o.rawdiff);
		l.add(o.netdiff);
		l.add(o.oldsum);
		l.add(o.potentialsum);
		l.add(o.olddiffpoints);
		l.add(o.potentialdiffpoints);
		l.add(o.oldpospoints);
		l.add(o.potentialpospoints);
		l.add(o.updated);
	}
	
}
